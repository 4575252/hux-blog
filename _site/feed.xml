<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linke&#39;s Blog</title>
    <description>多开心一点。</description>
    <link>http://4575252.github.io/</link>
    <atom:link href="http://4575252.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 18 Sep 2015 16:15:37 +0800</pubDate>
    <lastBuildDate>Fri, 18 Sep 2015 16:15:37 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>LDAP 与 Relation DB 的区别和用法</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;我能告诉你折腾一天 blog 主要是因为这篇文章的发布么~&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;前几日检索红肠啃僵尸的 blog, 留意了一下 cas sso 的构建,对于 openladp 是早有耳闻,也应用实施过 AD 与 WAS 的集成,并自行开发了一套简易 sso 的 api, 应用了&amp;gt;=5套的子系统，不过对于什么时候用 ldap 或 db 一直不甚了解，早上醒来冥思苦想google了半天，略有感觉因此成文。&lt;/p&gt;

&lt;h3 id=&quot;ldap-&quot;&gt;关于 ldap 的优缺点&lt;/h3&gt;
&lt;p&gt;优点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;数量大、读取快速（特殊的树形/文档树结构）&lt;/li&gt;
  &lt;li&gt;多年推广并广泛支持的国际流行标准，方便快速的与电子设备、软件系统集成&lt;/li&gt;
  &lt;li&gt;单点登录方面应用广发，对于多系统单用户的场景特别适用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺点&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不支持事务机制，写入、更新缓慢&lt;/li&gt;
  &lt;li&gt;权限模型较弱，单一层级、横向扩展空间有限，复杂权限设计还要结合关系型数据库&lt;/li&gt;
  &lt;li&gt;搭建复杂、集成易出错、文档少&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ldap--1&quot;&gt;LDAP 存在的意义&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;外语系电子设备如打印机/网络设备等,做认证默认都自带 ldap 接口,如有该服务可快速使用.&lt;/li&gt;
  &lt;li&gt;普通企业快速发展逐步积累了不少中小系统,回过头来发现每个用户都有好多账号口令,急需一个统一认证服务, LDAP 就应运而建了.&lt;/li&gt;
  &lt;li&gt;域服务的推广积累,大公司在实施 ITEL 都会考虑这块,第一时间就是搭建 AD 服务,然后足部横向推广&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;其他&lt;/h3&gt;

&lt;p&gt;LDAP 与 RDB 并不冲突, 很多时候需要通力合作.&lt;/p&gt;

&lt;p&gt;相对于 RDB,LDAP 在国内/短期项目应用并不多,但规模上去了还是会应用&lt;/p&gt;

&lt;p&gt;网上关于 LDAP 和 RDB 的争议还是不少, LDAP 虽然有点迟暮,但还是有不少份额,至少在某些场景还是很不错的解决方案.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;参考资料&lt;br /&gt;
为什么&lt;a href=&quot;https://www.centos.org/docs/5/html/5.2/Deployment_Guide/s1-ldap-adv.html&quot;&gt;使用 LDAP&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://blog.csdn.net/lifetragedy/article/details/43817903&quot;&gt;单点登录之CAS SSO从入门到精通（第一天）&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 18 Sep 2015 23:50:00 +0800</pubDate>
        <link>http://4575252.github.io/2015/09/18/ldap-rdb/</link>
        <guid isPermaLink="true">http://4575252.github.io/2015/09/18/ldap-rdb/</guid>
        
        <category>LDAP</category>
        
        <category>DataBase</category>
        
        
      </item>
    
      <item>
        <title>Hello 2015</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;“Yeah It’s on. ”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Linke 的 Blog 就这么DUANG开了, 总算有个地方可以好好写点东西了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#build&quot;&gt;跳过废话，直接看技术实现 &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;作为一个 ITer，早就有写 Blog 的想法了，其实老早也注册了几个, 不过总有这个那个问题, 就不吐槽国内的环境和无良的站点。&lt;strong&gt;但是既然作为一个 ITer，而且还算个程序员……&lt;/strong&gt; 大部分 Blog 服务都太丑，还容易被砍掉……结果就一直连个写 Blog 的地儿都没有。&lt;/p&gt;

&lt;p&gt;2015年也是脑洞大开的一年, 结合&lt;a href=&quot;http://www.zhihu.com/question/20576786&quot;&gt;费曼快速学习技巧&lt;/a&gt;, 想想还是写点东西总结总结, 毕竟笔记本里都是些乱七八糟的, 算是给自己开个专栏。&lt;/p&gt;

&lt;p&gt;马上又要进入 2016，觉得还是有很多话想要说，很多经历和感悟可以写，也想丰富下自己的个站，&lt;strong&gt;想来想去还是弄个 Blog 最适合……&lt;/strong&gt;罢罢罢，花一天搞一个吧！&lt;/p&gt;

&lt;p&gt;本站前端模板直接拷贝了&lt;a href=&quot;http://huangxuan.me/portfolio&quot;&gt;Hux Blog&lt;/a&gt; 和原作者&lt;a href=&quot;http://ironsummitmedia.github.io/startbootstrap-clean-blog-jekyll/&quot;&gt;Clean Blog&lt;/a&gt;,并直接复用了 &lt;a href=&quot;http://lzhblog.duoshuo.com/admin/&quot;&gt;duoshuo 评论系统&lt;/a&gt;,懒到极致了, O(∩_∩)O~&lt;/p&gt;

&lt;p id=&quot;build&quot;&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;那么接下来就说说 Building Blog 的技术细节。&lt;/p&gt;

&lt;p&gt;环境:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MBP OSX 10.9&lt;/li&gt;
  &lt;li&gt;Homebrew&lt;/li&gt;
  &lt;li&gt;Node.js&lt;/li&gt;
  &lt;li&gt;jekyll
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/Huxpro/huxpro.github.io&quot;&gt;clean blog template&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/20223939&quot;&gt;zhihu&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://25.io&quot;&gt;Mou&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;正好之前就有关注过 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; + &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; 快速建 Blog 的技术方案，觉得非常适合(其实在尝试台湾同胞 hexo 碰到了不少坑,又没妥善处理办法,看 github 官网挺推崇 jekyll, 并且鼓励在 pages 上推广 blog, 视乎比代码更欢迎~)。&lt;/p&gt;

&lt;p&gt;优点非常明显：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机
    &lt;ul&gt;
      &lt;li&gt;如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;非常熟悉的 Git Flow ，&lt;strong&gt;Git Commit 即 Blog Post&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Mac 也有 Github Desktop 版了,不用记忆那么多命令了,玩起来太爽了&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Markdown&lt;/strong&gt; 写作环境
    &lt;ul&gt;
      &lt;li&gt;这就是 Jekyll 的魔法了，习惯了 Markdown 排版后也是离不开&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Jekyll 的自定制还是相当容易的，基本就是个模版引擎&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;之前觉得最大的缺点就是怕被墙，其实也是优点。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;配置的过程中的大小坑&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;git 环境, mac 居然都自带了, 想来估计是 xcode 大集成的需要吧&lt;/li&gt;
  &lt;li&gt;jekyll 安装,因版本迭代较快,国内文章基本都太老旧,&lt;a href=&quot;http://internet-inspired.com/wrote/install-jekyll-in-osx-mavericks/&quot;&gt;参考&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;rubygem 的源居然被墙了……后来&lt;a href=&quot;https://github.com/juthilo/run-jekyll-on-windows/issues/34&quot;&gt;手动修改镜像源&lt;/a&gt;才成功&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;参考资料&lt;br /&gt;
jekyllcn 文档&lt;a href=&quot;http://jekyllcn.com&quot;&gt;http://jekyllcn.com&lt;/a&gt;&lt;br /&gt;
markdown 语法(…)&lt;br /&gt;
模板特别说明(…)&lt;/p&gt;

&lt;h3 id=&quot;goodbye-past&quot;&gt;&lt;em&gt;“Goodbye Past”&lt;/em&gt;&lt;/h3&gt;

</description>
        <pubDate>Fri, 18 Sep 2015 20:25:00 +0800</pubDate>
        <link>http://4575252.github.io/2015/09/18/hello-2015/</link>
        <guid isPermaLink="true">http://4575252.github.io/2015/09/18/hello-2015/</guid>
        
        <category>生活</category>
        
        
      </item>
    
  </channel>
</rss>
